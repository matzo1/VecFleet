{"ast":null,"code":"var _jsxFileName = \"C:\\\\Apache24\\\\htdocs\\\\Vec\\\\frontend\\\\src\\\\components\\\\DialogComponent.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport Dialog from \"@mui/material/Dialog\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ConfirmationDialogRaw(props) {\n  _s();\n  const {\n    onClose,\n    value: valueProp,\n    open,\n    opciones,\n    header,\n    ...other\n  } = props;\n  const [value, setValue] = React.useState(valueProp);\n  const checkGroupRef = React.useRef(null);\n  React.useEffect(() => {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n  const handleEntering = () => {\n    if (checkGroupRef.current != null) {\n      checkGroupRef.current.focus();\n    }\n  };\n  const handleOk = () => {\n    onClose(value);\n  };\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    sx: {\n      \"& .MuiDialog-paper\": {\n        width: \"80%\",\n        maxHeight: 435\n      }\n    },\n    maxWidth: \"xs\",\n    TransitionProps: {\n      onEntering: handleEntering\n    },\n    open: open,\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Seleccione para filtrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n        ref: checkGroupRef,\n        \"aria-label\": \"ringtone\",\n        name: \"ringtone\",\n        value: value,\n        onChange: handleChange,\n        children: opciones.map(option => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: option.id,\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 24\n          }, this),\n          label: option.descripcion\n        }, option.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleOk,\n        children: \"Ok\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(ConfirmationDialogRaw, \"l6Qi9eApTbrydHjMazmklYJ/oQQ=\");\n_c = ConfirmationDialogRaw;\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired\n};\nexport default function ConfirmationDialog(props) {\n  _s2();\n  const {\n    opciones,\n    header,\n    ...other\n  } = props;\n  const [open, setOpen] = React.useState(false);\n  const handleClickListItem = () => {\n    setOpen(true);\n  };\n  const handleClose = newValue => {\n    setOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: \"100%\",\n      maxWidth: 360,\n      bgcolor: \"background.paper\"\n    },\n    children: /*#__PURE__*/_jsxDEV(List, {\n      component: \"div\",\n      role: \"group\",\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        divider: true,\n        \"aria-haspopup\": \"true\",\n        \"aria-controls\": \"menu\",\n        \"aria-label\": header,\n        onClick: handleClickListItem,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: header\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmationDialogRaw, {\n        id: \"menu\",\n        keepMounted: true,\n        open: open,\n        onClose: handleClose,\n        opciones: opciones\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s2(ConfirmationDialog, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n_c2 = ConfirmationDialog;\nvar _c, _c2;\n$RefreshReg$(_c, \"ConfirmationDialogRaw\");\n$RefreshReg$(_c2, \"ConfirmationDialog\");","map":{"version":3,"names":["React","PropTypes","Box","Button","List","ListItem","ListItemText","DialogTitle","DialogContent","DialogActions","Dialog","RadioGroup","Checkbox","FormControlLabel","jsxDEV","_jsxDEV","ConfirmationDialogRaw","props","_s","onClose","value","valueProp","open","opciones","header","other","setValue","useState","checkGroupRef","useRef","useEffect","handleEntering","current","focus","handleOk","handleChange","event","target","sx","width","maxHeight","maxWidth","TransitionProps","onEntering","children","fileName","_jsxFileName","lineNumber","columnNumber","dividers","ref","name","onChange","map","option","id","control","label","descripcion","onClick","_c","propTypes","func","isRequired","bool","ConfirmationDialog","_s2","setOpen","handleClickListItem","handleClose","newValue","bgcolor","component","role","divider","primary","keepMounted","_c2","$RefreshReg$"],"sources":["C:/Apache24/htdocs/Vec/frontend/src/components/DialogComponent.js"],"sourcesContent":["import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\n\r\nfunction ConfirmationDialogRaw(props) {\r\n  const { onClose, value: valueProp, open, opciones, header, ...other } = props;\r\n  const [value, setValue] = React.useState(valueProp);\r\n  const checkGroupRef = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    if (!open) {\r\n      setValue(valueProp);\r\n    }\r\n  }, [valueProp, open]);\r\n\r\n  const handleEntering = () => {\r\n    if (checkGroupRef.current != null) {\r\n      checkGroupRef.current.focus();\r\n    }\r\n  };\r\n\r\n  const handleOk = () => {\r\n    onClose(value);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      sx={{ \"& .MuiDialog-paper\": { width: \"80%\", maxHeight: 435 } }}\r\n      maxWidth=\"xs\"\r\n      TransitionProps={{ onEntering: handleEntering }}\r\n      open={open}\r\n      {...other}\r\n    >\r\n      <DialogTitle>Seleccione para filtrar</DialogTitle>\r\n      <DialogContent dividers>\r\n        <RadioGroup\r\n          ref={checkGroupRef}\r\n          aria-label=\"ringtone\"\r\n          name=\"ringtone\"\r\n          value={value}\r\n          onChange={handleChange}\r\n        >\r\n          {opciones.map((option) => (\r\n            <FormControlLabel\r\n              value={option.id}\r\n              key={option.id}\r\n              control={<Checkbox />}\r\n              label={option.descripcion}\r\n            />\r\n          ))}\r\n        </RadioGroup>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleOk}>Ok</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nConfirmationDialogRaw.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default function ConfirmationDialog(props) {\r\n  const { opciones, header, ...other } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickListItem = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (newValue) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\", maxWidth: 360, bgcolor: \"background.paper\" }}>\r\n      <List component=\"div\" role=\"group\">\r\n        <ListItem\r\n          divider\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"menu\"\r\n          aria-label={header}\r\n          onClick={handleClickListItem}\r\n        >\r\n          <ListItemText primary={header} />\r\n        </ListItem>\r\n        <ConfirmationDialogRaw\r\n          id=\"menu\"\r\n          keepMounted\r\n          open={open}\r\n          onClose={handleClose}\r\n          opciones={opciones}\r\n        />\r\n      </List>\r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}